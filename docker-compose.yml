# docker-compose.yml

# Default: SQLite (no env required).
# Optional Cloud SQL: enable with `--profile cloudsql` and supply env vars.
services:
  web:
    build:
      context: .
    image: ezgestor-app:latest
    container_name: ezgestor-container
    ports:
      - "8000:8080"
    volumes:
      - db_data:/app/sqlite-data
    environment:
      DEBUG: ${DEBUG:-True}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-True}
      STATICFILES_STORAGE: ${STATICFILES_STORAGE:-whitenoise.storage.CompressedStaticFilesStorage}
      # Useful when testing via Expo Web (browser). Add LAN host:port if needed.
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS:-http://localhost:19006,http://127.0.0.1:19006}
      # Default to a persistent SQLite file inside the volume-backed directory
      DATABASE_URL: ${DATABASE_URL:-sqlite:////app/sqlite-data/db.sqlite3}
      CONN_MAX_AGE: ${CONN_MAX_AGE:-0}

  migrate:
    build:
      context: .
    image: ezgestor-app:latest
    command: ["sh", "-c", "python manage.py makemigrations --noinput && python manage.py migrate --noinput"]
    environment:
      DEBUG: ${DEBUG:-True}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-True}
      STATICFILES_STORAGE: ${STATICFILES_STORAGE:-whitenoise.storage.CompressedStaticFilesStorage}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS:-http://localhost:19006,http://127.0.0.1:19006}
      # Match the web default so migrations hit the same DB by default
      DATABASE_URL: ${DATABASE_URL:-sqlite:////app/sqlite-data/db.sqlite3}
      CONN_MAX_AGE: ${CONN_MAX_AGE:-0}
    volumes:
      - db_data:/app/sqlite-data
      - ./backend:/app
    restart: "no"

  cloudsql-proxy:
    image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.8.0
    command:
      - "${CLOUD_SQL_CONNECTION_NAME}"
      - "--address=0.0.0.0"
      - "--port=3306"
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/secrets/sa.json
    volumes:
      - ./secrets:/secrets:ro
    # No host port mapping needed; web connects to host cloudsql-proxy:3306 on the Docker network

volumes:
  db_data: